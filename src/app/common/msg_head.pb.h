// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: msg_head.proto

#ifndef PROTOBUF_INCLUDED_msg_5fhead_2eproto
#define PROTOBUF_INCLUDED_msg_5fhead_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_msg_5fhead_2eproto 

namespace protobuf_msg_5fhead_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[1];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_msg_5fhead_2eproto
namespace proto {
namespace Msg {
class MsgHead;
class MsgHeadDefaultTypeInternal;
extern MsgHeadDefaultTypeInternal _MsgHead_default_instance_;
}  // namespace Msg
}  // namespace proto
namespace google {
namespace protobuf {
template<> ::proto::Msg::MsgHead* Arena::CreateMaybeMessage<::proto::Msg::MsgHead>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace proto {
namespace Msg {

// ===================================================================

class MsgHead : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.Msg.MsgHead) */ {
 public:
  MsgHead();
  virtual ~MsgHead();

  MsgHead(const MsgHead& from);

  inline MsgHead& operator=(const MsgHead& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgHead(MsgHead&& from) noexcept
    : MsgHead() {
    *this = ::std::move(from);
  }

  inline MsgHead& operator=(MsgHead&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgHead& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgHead* internal_default_instance() {
    return reinterpret_cast<const MsgHead*>(
               &_MsgHead_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(MsgHead* other);
  friend void swap(MsgHead& a, MsgHead& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgHead* New() const final {
    return CreateMaybeMessage<MsgHead>(NULL);
  }

  MsgHead* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgHead>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgHead& from);
  void MergeFrom(const MsgHead& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgHead* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string src_bus_id = 4;
  void clear_src_bus_id();
  static const int kSrcBusIdFieldNumber = 4;
  const ::std::string& src_bus_id() const;
  void set_src_bus_id(const ::std::string& value);
  #if LANG_CXX11
  void set_src_bus_id(::std::string&& value);
  #endif
  void set_src_bus_id(const char* value);
  void set_src_bus_id(const char* value, size_t size);
  ::std::string* mutable_src_bus_id();
  ::std::string* release_src_bus_id();
  void set_allocated_src_bus_id(::std::string* src_bus_id);

  // string dst_bus_id = 5;
  void clear_dst_bus_id();
  static const int kDstBusIdFieldNumber = 5;
  const ::std::string& dst_bus_id() const;
  void set_dst_bus_id(const ::std::string& value);
  #if LANG_CXX11
  void set_dst_bus_id(::std::string&& value);
  #endif
  void set_dst_bus_id(const char* value);
  void set_dst_bus_id(const char* value, size_t size);
  ::std::string* mutable_dst_bus_id();
  ::std::string* release_dst_bus_id();
  void set_allocated_dst_bus_id(::std::string* dst_bus_id);

  // string msg = 6;
  void clear_msg();
  static const int kMsgFieldNumber = 6;
  const ::std::string& msg() const;
  void set_msg(const ::std::string& value);
  #if LANG_CXX11
  void set_msg(::std::string&& value);
  #endif
  void set_msg(const char* value);
  void set_msg(const char* value, size_t size);
  ::std::string* mutable_msg();
  ::std::string* release_msg();
  void set_allocated_msg(::std::string* msg);

  // uint32 cmd = 1;
  void clear_cmd();
  static const int kCmdFieldNumber = 1;
  ::google::protobuf::uint32 cmd() const;
  void set_cmd(::google::protobuf::uint32 value);

  // uint32 src_co_id = 2;
  void clear_src_co_id();
  static const int kSrcCoIdFieldNumber = 2;
  ::google::protobuf::uint32 src_co_id() const;
  void set_src_co_id(::google::protobuf::uint32 value);

  // uint32 dst_co_id = 3;
  void clear_dst_co_id();
  static const int kDstCoIdFieldNumber = 3;
  ::google::protobuf::uint32 dst_co_id() const;
  void set_dst_co_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.Msg.MsgHead)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr src_bus_id_;
  ::google::protobuf::internal::ArenaStringPtr dst_bus_id_;
  ::google::protobuf::internal::ArenaStringPtr msg_;
  ::google::protobuf::uint32 cmd_;
  ::google::protobuf::uint32 src_co_id_;
  ::google::protobuf::uint32 dst_co_id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fhead_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// MsgHead

// uint32 cmd = 1;
inline void MsgHead::clear_cmd() {
  cmd_ = 0u;
}
inline ::google::protobuf::uint32 MsgHead::cmd() const {
  // @@protoc_insertion_point(field_get:proto.Msg.MsgHead.cmd)
  return cmd_;
}
inline void MsgHead::set_cmd(::google::protobuf::uint32 value) {
  
  cmd_ = value;
  // @@protoc_insertion_point(field_set:proto.Msg.MsgHead.cmd)
}

// uint32 src_co_id = 2;
inline void MsgHead::clear_src_co_id() {
  src_co_id_ = 0u;
}
inline ::google::protobuf::uint32 MsgHead::src_co_id() const {
  // @@protoc_insertion_point(field_get:proto.Msg.MsgHead.src_co_id)
  return src_co_id_;
}
inline void MsgHead::set_src_co_id(::google::protobuf::uint32 value) {
  
  src_co_id_ = value;
  // @@protoc_insertion_point(field_set:proto.Msg.MsgHead.src_co_id)
}

// uint32 dst_co_id = 3;
inline void MsgHead::clear_dst_co_id() {
  dst_co_id_ = 0u;
}
inline ::google::protobuf::uint32 MsgHead::dst_co_id() const {
  // @@protoc_insertion_point(field_get:proto.Msg.MsgHead.dst_co_id)
  return dst_co_id_;
}
inline void MsgHead::set_dst_co_id(::google::protobuf::uint32 value) {
  
  dst_co_id_ = value;
  // @@protoc_insertion_point(field_set:proto.Msg.MsgHead.dst_co_id)
}

// string src_bus_id = 4;
inline void MsgHead::clear_src_bus_id() {
  src_bus_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgHead::src_bus_id() const {
  // @@protoc_insertion_point(field_get:proto.Msg.MsgHead.src_bus_id)
  return src_bus_id_.GetNoArena();
}
inline void MsgHead::set_src_bus_id(const ::std::string& value) {
  
  src_bus_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.Msg.MsgHead.src_bus_id)
}
#if LANG_CXX11
inline void MsgHead::set_src_bus_id(::std::string&& value) {
  
  src_bus_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.Msg.MsgHead.src_bus_id)
}
#endif
inline void MsgHead::set_src_bus_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  src_bus_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.Msg.MsgHead.src_bus_id)
}
inline void MsgHead::set_src_bus_id(const char* value, size_t size) {
  
  src_bus_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.Msg.MsgHead.src_bus_id)
}
inline ::std::string* MsgHead::mutable_src_bus_id() {
  
  // @@protoc_insertion_point(field_mutable:proto.Msg.MsgHead.src_bus_id)
  return src_bus_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgHead::release_src_bus_id() {
  // @@protoc_insertion_point(field_release:proto.Msg.MsgHead.src_bus_id)
  
  return src_bus_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgHead::set_allocated_src_bus_id(::std::string* src_bus_id) {
  if (src_bus_id != NULL) {
    
  } else {
    
  }
  src_bus_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), src_bus_id);
  // @@protoc_insertion_point(field_set_allocated:proto.Msg.MsgHead.src_bus_id)
}

// string dst_bus_id = 5;
inline void MsgHead::clear_dst_bus_id() {
  dst_bus_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgHead::dst_bus_id() const {
  // @@protoc_insertion_point(field_get:proto.Msg.MsgHead.dst_bus_id)
  return dst_bus_id_.GetNoArena();
}
inline void MsgHead::set_dst_bus_id(const ::std::string& value) {
  
  dst_bus_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.Msg.MsgHead.dst_bus_id)
}
#if LANG_CXX11
inline void MsgHead::set_dst_bus_id(::std::string&& value) {
  
  dst_bus_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.Msg.MsgHead.dst_bus_id)
}
#endif
inline void MsgHead::set_dst_bus_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  dst_bus_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.Msg.MsgHead.dst_bus_id)
}
inline void MsgHead::set_dst_bus_id(const char* value, size_t size) {
  
  dst_bus_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.Msg.MsgHead.dst_bus_id)
}
inline ::std::string* MsgHead::mutable_dst_bus_id() {
  
  // @@protoc_insertion_point(field_mutable:proto.Msg.MsgHead.dst_bus_id)
  return dst_bus_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgHead::release_dst_bus_id() {
  // @@protoc_insertion_point(field_release:proto.Msg.MsgHead.dst_bus_id)
  
  return dst_bus_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgHead::set_allocated_dst_bus_id(::std::string* dst_bus_id) {
  if (dst_bus_id != NULL) {
    
  } else {
    
  }
  dst_bus_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), dst_bus_id);
  // @@protoc_insertion_point(field_set_allocated:proto.Msg.MsgHead.dst_bus_id)
}

// string msg = 6;
inline void MsgHead::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgHead::msg() const {
  // @@protoc_insertion_point(field_get:proto.Msg.MsgHead.msg)
  return msg_.GetNoArena();
}
inline void MsgHead::set_msg(const ::std::string& value) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.Msg.MsgHead.msg)
}
#if LANG_CXX11
inline void MsgHead::set_msg(::std::string&& value) {
  
  msg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.Msg.MsgHead.msg)
}
#endif
inline void MsgHead::set_msg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.Msg.MsgHead.msg)
}
inline void MsgHead::set_msg(const char* value, size_t size) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.Msg.MsgHead.msg)
}
inline ::std::string* MsgHead::mutable_msg() {
  
  // @@protoc_insertion_point(field_mutable:proto.Msg.MsgHead.msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgHead::release_msg() {
  // @@protoc_insertion_point(field_release:proto.Msg.MsgHead.msg)
  
  return msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgHead::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    
  } else {
    
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:proto.Msg.MsgHead.msg)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace Msg
}  // namespace proto

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_msg_5fhead_2eproto
