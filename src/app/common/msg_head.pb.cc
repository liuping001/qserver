// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: msg_head.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "msg_head.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace proto {
namespace Msg {
class MsgHeadDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<MsgHead> {
} _MsgHead_default_instance_;

namespace protobuf_msg_5fhead_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[1];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgHead, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgHead, cmd_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgHead, src_co_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgHead, dst_co_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgHead, src_bus_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgHead, dst_bus_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgHead, msg_),
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, -1, sizeof(MsgHead)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_MsgHead_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "msg_head.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 1);
}

}  // namespace

void TableStruct::Shutdown() {
  _MsgHead_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _MsgHead_default_instance_.DefaultConstruct();
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\016msg_head.proto\022\tproto.Msg\"q\n\007MsgHead\022\013"
      "\n\003cmd\030\001 \001(\r\022\021\n\tsrc_co_id\030\002 \001(\r\022\021\n\tdst_co"
      "_id\030\003 \001(\r\022\022\n\nsrc_bus_id\030\004 \001(\t\022\022\n\ndst_bus"
      "_id\030\005 \001(\t\022\013\n\003msg\030\006 \001(\tb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 150);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "msg_head.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_msg_5fhead_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MsgHead::kCmdFieldNumber;
const int MsgHead::kSrcCoIdFieldNumber;
const int MsgHead::kDstCoIdFieldNumber;
const int MsgHead::kSrcBusIdFieldNumber;
const int MsgHead::kDstBusIdFieldNumber;
const int MsgHead::kMsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MsgHead::MsgHead()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_msg_5fhead_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.Msg.MsgHead)
}
MsgHead::MsgHead(const MsgHead& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  src_bus_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.src_bus_id().size() > 0) {
    src_bus_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.src_bus_id_);
  }
  dst_bus_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.dst_bus_id().size() > 0) {
    dst_bus_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dst_bus_id_);
  }
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.msg().size() > 0) {
    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  ::memcpy(&cmd_, &from.cmd_,
    reinterpret_cast<char*>(&dst_co_id_) -
    reinterpret_cast<char*>(&cmd_) + sizeof(dst_co_id_));
  // @@protoc_insertion_point(copy_constructor:proto.Msg.MsgHead)
}

void MsgHead::SharedCtor() {
  src_bus_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dst_bus_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&cmd_, 0, reinterpret_cast<char*>(&dst_co_id_) -
    reinterpret_cast<char*>(&cmd_) + sizeof(dst_co_id_));
  _cached_size_ = 0;
}

MsgHead::~MsgHead() {
  // @@protoc_insertion_point(destructor:proto.Msg.MsgHead)
  SharedDtor();
}

void MsgHead::SharedDtor() {
  src_bus_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dst_bus_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MsgHead::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgHead::descriptor() {
  protobuf_msg_5fhead_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_msg_5fhead_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MsgHead& MsgHead::default_instance() {
  protobuf_msg_5fhead_2eproto::InitDefaults();
  return *internal_default_instance();
}

MsgHead* MsgHead::New(::google::protobuf::Arena* arena) const {
  MsgHead* n = new MsgHead;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MsgHead::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.Msg.MsgHead)
  src_bus_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dst_bus_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&cmd_, 0, reinterpret_cast<char*>(&dst_co_id_) -
    reinterpret_cast<char*>(&cmd_) + sizeof(dst_co_id_));
}

bool MsgHead::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.Msg.MsgHead)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 cmd = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &cmd_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 src_co_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &src_co_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 dst_co_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &dst_co_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string src_bus_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_src_bus_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->src_bus_id().data(), this->src_bus_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.Msg.MsgHead.src_bus_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string dst_bus_id = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_dst_bus_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->dst_bus_id().data(), this->dst_bus_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.Msg.MsgHead.dst_bus_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string msg = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->msg().data(), this->msg().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.Msg.MsgHead.msg"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.Msg.MsgHead)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.Msg.MsgHead)
  return false;
#undef DO_
}

void MsgHead::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.Msg.MsgHead)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 cmd = 1;
  if (this->cmd() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->cmd(), output);
  }

  // uint32 src_co_id = 2;
  if (this->src_co_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->src_co_id(), output);
  }

  // uint32 dst_co_id = 3;
  if (this->dst_co_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->dst_co_id(), output);
  }

  // string src_bus_id = 4;
  if (this->src_bus_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->src_bus_id().data(), this->src_bus_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.Msg.MsgHead.src_bus_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->src_bus_id(), output);
  }

  // string dst_bus_id = 5;
  if (this->dst_bus_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->dst_bus_id().data(), this->dst_bus_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.Msg.MsgHead.dst_bus_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->dst_bus_id(), output);
  }

  // string msg = 6;
  if (this->msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg().data(), this->msg().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.Msg.MsgHead.msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->msg(), output);
  }

  // @@protoc_insertion_point(serialize_end:proto.Msg.MsgHead)
}

::google::protobuf::uint8* MsgHead::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.Msg.MsgHead)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 cmd = 1;
  if (this->cmd() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->cmd(), target);
  }

  // uint32 src_co_id = 2;
  if (this->src_co_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->src_co_id(), target);
  }

  // uint32 dst_co_id = 3;
  if (this->dst_co_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->dst_co_id(), target);
  }

  // string src_bus_id = 4;
  if (this->src_bus_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->src_bus_id().data(), this->src_bus_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.Msg.MsgHead.src_bus_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->src_bus_id(), target);
  }

  // string dst_bus_id = 5;
  if (this->dst_bus_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->dst_bus_id().data(), this->dst_bus_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.Msg.MsgHead.dst_bus_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->dst_bus_id(), target);
  }

  // string msg = 6;
  if (this->msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg().data(), this->msg().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.Msg.MsgHead.msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->msg(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:proto.Msg.MsgHead)
  return target;
}

size_t MsgHead::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.Msg.MsgHead)
  size_t total_size = 0;

  // string src_bus_id = 4;
  if (this->src_bus_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->src_bus_id());
  }

  // string dst_bus_id = 5;
  if (this->dst_bus_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->dst_bus_id());
  }

  // string msg = 6;
  if (this->msg().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msg());
  }

  // uint32 cmd = 1;
  if (this->cmd() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->cmd());
  }

  // uint32 src_co_id = 2;
  if (this->src_co_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->src_co_id());
  }

  // uint32 dst_co_id = 3;
  if (this->dst_co_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->dst_co_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgHead::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.Msg.MsgHead)
  GOOGLE_DCHECK_NE(&from, this);
  const MsgHead* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MsgHead>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.Msg.MsgHead)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.Msg.MsgHead)
    MergeFrom(*source);
  }
}

void MsgHead::MergeFrom(const MsgHead& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.Msg.MsgHead)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.src_bus_id().size() > 0) {

    src_bus_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.src_bus_id_);
  }
  if (from.dst_bus_id().size() > 0) {

    dst_bus_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dst_bus_id_);
  }
  if (from.msg().size() > 0) {

    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  if (from.cmd() != 0) {
    set_cmd(from.cmd());
  }
  if (from.src_co_id() != 0) {
    set_src_co_id(from.src_co_id());
  }
  if (from.dst_co_id() != 0) {
    set_dst_co_id(from.dst_co_id());
  }
}

void MsgHead::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.Msg.MsgHead)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgHead::CopyFrom(const MsgHead& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.Msg.MsgHead)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgHead::IsInitialized() const {
  return true;
}

void MsgHead::Swap(MsgHead* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgHead::InternalSwap(MsgHead* other) {
  src_bus_id_.Swap(&other->src_bus_id_);
  dst_bus_id_.Swap(&other->dst_bus_id_);
  msg_.Swap(&other->msg_);
  std::swap(cmd_, other->cmd_);
  std::swap(src_co_id_, other->src_co_id_);
  std::swap(dst_co_id_, other->dst_co_id_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MsgHead::GetMetadata() const {
  protobuf_msg_5fhead_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_msg_5fhead_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MsgHead

// uint32 cmd = 1;
void MsgHead::clear_cmd() {
  cmd_ = 0u;
}
::google::protobuf::uint32 MsgHead::cmd() const {
  // @@protoc_insertion_point(field_get:proto.Msg.MsgHead.cmd)
  return cmd_;
}
void MsgHead::set_cmd(::google::protobuf::uint32 value) {
  
  cmd_ = value;
  // @@protoc_insertion_point(field_set:proto.Msg.MsgHead.cmd)
}

// uint32 src_co_id = 2;
void MsgHead::clear_src_co_id() {
  src_co_id_ = 0u;
}
::google::protobuf::uint32 MsgHead::src_co_id() const {
  // @@protoc_insertion_point(field_get:proto.Msg.MsgHead.src_co_id)
  return src_co_id_;
}
void MsgHead::set_src_co_id(::google::protobuf::uint32 value) {
  
  src_co_id_ = value;
  // @@protoc_insertion_point(field_set:proto.Msg.MsgHead.src_co_id)
}

// uint32 dst_co_id = 3;
void MsgHead::clear_dst_co_id() {
  dst_co_id_ = 0u;
}
::google::protobuf::uint32 MsgHead::dst_co_id() const {
  // @@protoc_insertion_point(field_get:proto.Msg.MsgHead.dst_co_id)
  return dst_co_id_;
}
void MsgHead::set_dst_co_id(::google::protobuf::uint32 value) {
  
  dst_co_id_ = value;
  // @@protoc_insertion_point(field_set:proto.Msg.MsgHead.dst_co_id)
}

// string src_bus_id = 4;
void MsgHead::clear_src_bus_id() {
  src_bus_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& MsgHead::src_bus_id() const {
  // @@protoc_insertion_point(field_get:proto.Msg.MsgHead.src_bus_id)
  return src_bus_id_.GetNoArena();
}
void MsgHead::set_src_bus_id(const ::std::string& value) {
  
  src_bus_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.Msg.MsgHead.src_bus_id)
}
#if LANG_CXX11
void MsgHead::set_src_bus_id(::std::string&& value) {
  
  src_bus_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.Msg.MsgHead.src_bus_id)
}
#endif
void MsgHead::set_src_bus_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  src_bus_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.Msg.MsgHead.src_bus_id)
}
void MsgHead::set_src_bus_id(const char* value, size_t size) {
  
  src_bus_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.Msg.MsgHead.src_bus_id)
}
::std::string* MsgHead::mutable_src_bus_id() {
  
  // @@protoc_insertion_point(field_mutable:proto.Msg.MsgHead.src_bus_id)
  return src_bus_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MsgHead::release_src_bus_id() {
  // @@protoc_insertion_point(field_release:proto.Msg.MsgHead.src_bus_id)
  
  return src_bus_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MsgHead::set_allocated_src_bus_id(::std::string* src_bus_id) {
  if (src_bus_id != NULL) {
    
  } else {
    
  }
  src_bus_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), src_bus_id);
  // @@protoc_insertion_point(field_set_allocated:proto.Msg.MsgHead.src_bus_id)
}

// string dst_bus_id = 5;
void MsgHead::clear_dst_bus_id() {
  dst_bus_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& MsgHead::dst_bus_id() const {
  // @@protoc_insertion_point(field_get:proto.Msg.MsgHead.dst_bus_id)
  return dst_bus_id_.GetNoArena();
}
void MsgHead::set_dst_bus_id(const ::std::string& value) {
  
  dst_bus_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.Msg.MsgHead.dst_bus_id)
}
#if LANG_CXX11
void MsgHead::set_dst_bus_id(::std::string&& value) {
  
  dst_bus_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.Msg.MsgHead.dst_bus_id)
}
#endif
void MsgHead::set_dst_bus_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  dst_bus_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.Msg.MsgHead.dst_bus_id)
}
void MsgHead::set_dst_bus_id(const char* value, size_t size) {
  
  dst_bus_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.Msg.MsgHead.dst_bus_id)
}
::std::string* MsgHead::mutable_dst_bus_id() {
  
  // @@protoc_insertion_point(field_mutable:proto.Msg.MsgHead.dst_bus_id)
  return dst_bus_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MsgHead::release_dst_bus_id() {
  // @@protoc_insertion_point(field_release:proto.Msg.MsgHead.dst_bus_id)
  
  return dst_bus_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MsgHead::set_allocated_dst_bus_id(::std::string* dst_bus_id) {
  if (dst_bus_id != NULL) {
    
  } else {
    
  }
  dst_bus_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), dst_bus_id);
  // @@protoc_insertion_point(field_set_allocated:proto.Msg.MsgHead.dst_bus_id)
}

// string msg = 6;
void MsgHead::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& MsgHead::msg() const {
  // @@protoc_insertion_point(field_get:proto.Msg.MsgHead.msg)
  return msg_.GetNoArena();
}
void MsgHead::set_msg(const ::std::string& value) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.Msg.MsgHead.msg)
}
#if LANG_CXX11
void MsgHead::set_msg(::std::string&& value) {
  
  msg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.Msg.MsgHead.msg)
}
#endif
void MsgHead::set_msg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.Msg.MsgHead.msg)
}
void MsgHead::set_msg(const char* value, size_t size) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.Msg.MsgHead.msg)
}
::std::string* MsgHead::mutable_msg() {
  
  // @@protoc_insertion_point(field_mutable:proto.Msg.MsgHead.msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MsgHead::release_msg() {
  // @@protoc_insertion_point(field_release:proto.Msg.MsgHead.msg)
  
  return msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MsgHead::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    
  } else {
    
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:proto.Msg.MsgHead.msg)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace Msg
}  // namespace proto

// @@protoc_insertion_point(global_scope)
